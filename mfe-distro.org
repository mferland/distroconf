* Install dependencies

sudo apt install -y astyle \
autoconf \
autotools-dev \
bison \
bmap-tools \
brasero \
check \
chrpath \
cmake \
devscripts \
dvdbackup \
emacs \
filezilla \
flex \
fonts-terminus \
gawk \
gcc \
git \
git-email \
git-lfs \
gitk \
global \
gnuplot-x11 \
htop \
i3 \
jq \
libelf-dev \
libncursesw5-dev \
libssl-dev \
libtool \
libtool-bin \
libusb-1.0-0-dev \
lzop \
mkisofs \
ncurses-dev \
nfs-common \
nmap \
openssh-server \
picocom \
pkg-config \
python3-pip \
rpm2cpio \
fonts-terminus \
texinfo \
texlive-full \
tree \
ubuntu-restricted-extras \
valgrind \
vlc \
zlib1g-dev

mkdir -p ~/dev
cd ~/dev
git clone https://github.com/mferland/distroconf.git mfedistro

sudo snap install flameshot

* OpenCL

sudo apt install mesa-opencl-icd
sudo apt install opencl-headers
sudo apt install ocl-icd-opencl-dev

Mesa and LLVM PPA:

sudo add-apt-repository ppa:paulo-miguel-dias/pkppa
sudo apt-get update

* Add to dialout group

sudo gpasswd --add ${USER} dialout

* Configure Terminal

echo "export TERMINAL=\"gnome-terminal --hide-menubar\"" >> .bashrc

* Configure key repeat

echo "xset r rate 300 40" > ~/.xprofile

* Configure i3

mkdir -p ~/.config/i3
mkdir -p ~/.config/i3status
mkdir -p ~/.config/i3blocks

cp ~/dev/mfedistro/i3.conf ~/.config/i3/config
cp ~/dev/mfedistro/i3status.conf ~/.config/i3status/config
cp ~/dev/mfedistro/i3blocks.conf ~/.config/i3blocks/config

* Install fonts

cd ~
mkdir -p .fonts && cd .fonts
wget http://upperbounds.net/download/download_bridge.php?get=ProggyClean.ttf.zip -O ProggyClean.ttf.zip
unzip ProggyClean.ttf.zip
rm Licence.txt Readme.txt ProggyClean.ttf.zip

* Install Emacs Packages

mkdir -p ~/.emacs.d/site-lisp
mkdir -p ~/.saves
cp ~/dev/mfedistro/init.el ~/.emacs.d/init.el

Note: remove ~/.emacs.d/elpa if it exists.

** bb-mode

mkdir -p ~/.emacs.d/site-lisp/bb-mode
git clone https://github.com/mferland/bb-mode.git ~/.emacs.d/site-lisp/bb-mode

* Install Emacs Server

mkdir -p ~/.config/systemd/user
cp ~/dev/mfedistro/emacs.service ~/.config/systemd/user
systemctl --user enable emacs

mkdir -p ~/bin
cp ~/dev/mfedistro/edit ~/bin/edit
chmod 755 ~/bin/edit
echo "export EDITOR=~/bin/edit" >> ~/.bashrc

cp ~/dev/mfedistro/lock ~/bin/lock
chmod 755 ~/bin/lock

* Install ssh-agent

cp ~/dev/mfedistro/ssh-agent.service ~/.config/systemd/user
systemctl --user enable ssh-agent
systemctl --user start ssh-agent

echo 'eval $(systemctl --user show-environment | grep SSH_AUTH_SOCK)' >> ~/.bash_profile
echo 'export SSH_AUTH_SOCK' >> ~/.bash_profile

mkdir -p ~/.ssh
cat <<EOF > ~/.ssh/config
AddKeysToAgent yes
EOF

* Install langtool service

sudo cp ~/dev/mfedistro/langtool.service /etc/systemd/system
sudo systemctl enable langtool.service
sudo systemctl start langtool.service

* Weechat

sudo apt install dirmngr gpg-agent apt-transport-https curl
sudo apt-key adv --keyserver hkps://keys.openpgp.org --recv-keys 11E9DE8848F2B65222AA75B8D1820DB22A11534E
RELEASE=$(lsb_release -cs)
echo "deb [arch=amd64] https://weechat.org/ubuntu ${RELEASE} main" | sudo tee /etc/apt/sources.list.d/weechat.list
echo "deb-src [arch=amd64] https://weechat.org/ubuntu ${RELEASE} main" | sudo tee -a /etc/apt/sources.list.d/weechat.list
sudo apt-get update
sudo apt-get install weechat-curses weechat-plugins weechat-python weechat-perl

* Debug Symbol Packages

echo "deb http://ddebs.ubuntu.com $(lsb_release -cs) main restricted universe multiverse
deb http://ddebs.ubuntu.com $(lsb_release -cs)-updates main restricted universe multiverse
deb http://ddebs.ubuntu.com $(lsb_release -cs)-proposed main restricted universe multiverse" | \
sudo tee -a /etc/apt/sources.list.d/ddebs.list

sudo apt install ubuntu-dbgsym-keyring

sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F2EDC64DC5AEE1F6B9C621F0C8CAB6595FDFF622

sudo apt-get update

* Configure NFS mounts

mkdir -p ~/nas/doc
mkdir -p ~/nas/download
mkdir -p ~/nas/music
mkdir -p ~/nas/picture
mkdir -p ~/nas/video

export TMPFILE=$(mktemp)
echo "" >> $TMPFILE
echo "# local network mounts" >> $TMPFILE
for m in doc download music picture video; do echo "freenas.doom.priv:/mnt/mfe/${m} /home/marc/nas/${m} nfs rsize=8192,wsize=8192,timeo=14,intr 0 0" >> $TMPFILE; done;
sudo -E /bin/sh -c "cat $TMPFILE >> /etc/fstab"

* Xmodmap

echo "clear Mod4" > ~/.Xmodmap
echo "add Mod4 = Muhenkan" >> ~/.Xmodmap

* IBus

ibus-setup
# set shortcut to <Ctrl> <Shift> <Super> space
# Show property panel: Hide automatically
# Add French Canadian keyboard and US English
# uncheck "Use system keyboard layout"
# Note: make sure keyboard dip switch are: 001010

* VirtualBox

echo "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian hirsute contrib" | sudo tee -a /etc/apt/sources.list
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -
wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -
sudo apt-get update
sudo apt-get install -y virtualbox-6.1
sudo apt-get install -y dkms

** Install symlink to ~/mnt

cd
ln -sf /home/marc/mnt/VirtualBox\ VMs/ VirtualBox\ VMs

** Install Extension Pack (for USB2-3 support)

NOTE: Check the latest version first.

export VBOXVER=6.1.36
wget https://download.virtualbox.org/virtualbox/${VBOXVER}/Oracle_VM_VirtualBox_Extension_Pack-${VBOXVER}.vbox-extpack
sudo VBoxManage extpack install --replace Oracle_VM_VirtualBox_Extension_Pack-${VBOXVER}.vbox-extpack
sudo usermod -aG vboxusers marc
rm Oracle_VM_VirtualBox_Extension_Pack-${VBOXVER}.vbox-extpack
reboot

** Disable auto capture

Auto capture prevents me from switching desktop when the focus is on
the VirtualBox window.

- File -> Preferences
- Input
- Uncheck 'Auto Capture Keyboard'

* Vagrant

wget https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_x86_64.deb
sudo dpkg -i vagrant_2.2.10_x86_64.deb
rm vagrant_2.2.10_x86_64.deb

* Skype

Go to: https://www.skype.com/en/get-skype/
sudo dpkg -i skypeforlinux-64.deb

* NXP Pins Tool

Go to: https://www.nxp.com/pages/pins-tool-for-i.mx-application-processors:PINS-TOOL-IMX?tab=Design_Tools_Tab
sudo dpkg -i pins-tool-for-imx-processors-v5-1_amd64.deb

* Spotify

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 931FF8E79F0876134EDDBDCCA87FF9DF48BF1C90
echo deb http://repository.spotify.com stable non-free | sudo tee /etc/apt/sources.list.d/spotify.list
sudo apt-get update
sudo apt-get install -y spotify-client

* Docker

sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
apt-cache policy docker-ce
# make sure we are pulling from docker repo
sudo apt install docker-ce
sudo systemctl status docker

sudo usermod -aG docker ${USER}
su - ${USER}
# make sure you are in the docker group
groups

* i3status

mkdir -p ~/.config/i3status/
cp ~/dev/mfedistro/i3status.conf ~/.config/i3status/config

* libdvdcss

sudo apt-get install libdvd-pkg
sudo dpkg-reconfigure libdvd-pkg

* Terminal

Terminus TTF Medium

* git

git config --global user.name "Marc Ferland"
git config --global user.email marc.ferland@gmail.com
git config --global sendemail.from "ferlandm@amotus.ca"
git config --global sendemail.smtpuser "marc.ferland@gmail.com"
git config --global sendemail.smtpserver "smtp.googlemail.com"
git config --global sendemail.smtpencryption tls
git config --global sendemail.smtpserverport 587

* dput

touch ~/.dput.cf
echo "[mentors]" >> ~/.dput.cf
echo "fqdn = mentors.debian.net" >> ~/.dput.cf
echo "incoming = /upload" >> ~/.dput.cf
echo "method = https" >> ~/.dput.cf
echo "allow_unsigned_uploads = 0" >> ~/.dput.cf
echo "progress_indicator = 2" >> ~/.dput.cf
echo "# Allow uploads for UNRELEASED packages" >> ~/.dput.cf
echo "allowed_distributions = .*" >> ~/.dput.cf

* gpg

gpg --import ~/nas/??/mykey_pub.gpg
gpg --allow-secret-key-import --import ~/mykey_sec.gpg
gpg --list-keys

* BACKUP

** GPG

gpg --list-keys
gpg --output mykey_pub.gpg --armor --export KEY
gpg --output mykey_sec.gpg --armor --export-secret-key KEY
cp mykey_*.gpg ~/nas/??

** SSH

cp -a ~/.ssh ~/nas/??

* WORK

mkdir ~/mnt
sudo mount /dev/sdb1 ./mnt
sudo chmod 755 ./mnt
echo "/dev/sdb1 /home/marc/mnt ext4 rw,exec 0 0" | sudo tee -a /etc/fstab
